openapi: 3.0.1
info:
  title: DogeCubeX API Definition
  version: v1
  description: |
    The APIs described here are publicly available and are guaranteed to remain beckward-compatible for the next few months until Babylon.
servers:
- url: https://dogecubex.live
  description: DogeCubeX
paths:
  /api/swap/quote.json:
    post:
      tags:
      - swap-controller
      operationId: getQuote
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuoteRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteDto'
  /api/config.json:
    get:
      tags:
      - config-controller
      operationId: getConfig
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AmmConfig'
  /api/tokens.json:
    get:
      tags:
      - tokens-controller
      operationId: getTokens
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TokenDto'
  /api/token-price.json:
    get:
      tags:
      - analytics-controller
      operationId: getTokenPrice
      parameters:
      - name: symbol
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenPriceDto'
  /api/token-details.json:
    get:
      tags:
      - analytics-controller
      operationId: getTokenAnalytics
      parameters:
      - name: symbol
        in: query
        required: true
        schema:
          type: string
      - name: currency
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenDetailsDto'
  /api/stakers.json:
    get:
      tags:
      - stakers-controller
      operationId: getStakers
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StakersResponseDto'
  /api/engine-status.json:
    get:
      tags:
      - home-controller
      operationId: getEngineStatus
      parameters:
      - name: symbol
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusStringDto'
  /api/engine/status.json:
    get:
      description: Same above but additionally returns Pooled Liquidity.
      tags:
      - home-controller
      operationId: getEngineStatus2
      parameters:
      - name: symbol
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusDto'
  /api/analytics/tokens.json:
    get:
      tags:
      - analytics-controller
      operationId: getTokensAnalytics
      parameters:
      - name: currency
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TokenAnalyticsDto'
  /api/analytics/swaps.json:
    get:
      tags:
      - analytics-controller
      operationId: getSwaps
      parameters:
      - name: symbol
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TokenSwapDto'
  /api/analytics/summary.json:
    get:
      tags:
      - analytics-controller
      operationId: getSummary
      parameters:
      - name: currency
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyticsSummaryDto'
  /api/pools-info.json:
    get:
      tags:
      - swap-controller
      operationId: getPoolsInfo
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PoolInfoDto'
  /api/Z3US/pools-info.json:
    get:
      description: Same as `getPoolsInfo` but will return smaller Hero images (used by Z3US wallet).
      tags:
      - swap-controller
      operationId: getPoolsInfoZ3US
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PoolInfoDto'
components:
  schemas:
    QuoteRequest:
      type: object
      properties:
        from:
          type: string
        to:
          type: string
        amountFrom:
          type: number
        amountTo:
          type: number
        maxSlippage:
          type: number
    QuoteDto:
      type: object
      properties:
        sentAmount:
          type: string
        receivedAmount:
          type: string
        minAmount:
          type: string
        price:
          type: string
        priceImpact:
          type: string
        resultingPrice:
          type: string
        error:
          type: string
    PoolDto:
      type: object
      properties:
        tokenA:
          type: string
        tokenB:
          type: string
        amountA:
          type: string
        amountB:
          type: string
    StatusDto:
      type: object
      properties:
        status:
          type: string
        pool:
          $ref: '#/components/schemas/PoolDto'
    AmmConfig:
      type: object
      properties:
        minOrderSize:
          type: number
        maxOrderSize:
          type: number
        stakingMaxOrders:
          type: object
          additionalProperties:
            type: string
        stakingOrderLimits:
          type: object
          additionalProperties:
            type: number
        stakerMaxOrderSize:
          type: number
        swapTransferFeeXrd:
          type: number
        swapRefundFeeXrd:
          type: number
        exchangeFee:
          type: number
    TokenDto:
      type: object
      properties:
        rri:
          type: string
        symbol:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: string
    TokenPriceDto:
      type: object
      properties:
        priceXrd:
          type: number
        priceUsd:
          type: number
    TokenAnalyticsDto:
      type: object
      properties:
        token:
          $ref: '#/components/schemas/TokenInfoDto'
        price:
          type: number
        priceChange24h:
          type: number
        priceChange7d:
          type: number
        volume24h:
          type: number
        volume7d:
          type: number
        liquidityA:
          type: number
        liquidityB:
          type: number
        valuation:
          type: number
        currency:
          type: string
    TokenDetailsDto:
      type: object
      properties:
        symbol:
          type: string
        description:
          type: string
        poolAccount:
          type: string
        tokenInfoUrl:
          type: string
        totalSupply:
          type: number
        analytics:
          $ref: '#/components/schemas/TokenAnalyticsDto'
    TokenInfoDto:
      type: object
      properties:
        symbol:
          type: string
        name:
          type: string
        rri:
          type: string
        iconUrl:
          type: string
    PairStringString:
      type: object
      properties:
        first:
          type: string
        second:
          type: string
    StakerDto:
      type: object
      properties:
        address:
          type: string
        stake:
          type: string
        tradeLimit:
          type: string
    StakersResponseDto:
      type: object
      properties:
        stakers:
          type: array
          items:
            $ref: '#/components/schemas/StakerDto'
        stakingLimits:
          type: array
          items:
            $ref: '#/components/schemas/PairStringString'
        defaultLimit:
          type: string
    PoolInfoDto:
      type: object
      properties:
        token:
          $ref: '#/components/schemas/TokenInfoDto'
        account:
          type: string
        heroImageUrl:
          type: string
    StatusStringDto:
      type: object
      properties:
        status:
          type: string
    TokenSwapDto:
      type: object
      properties:
        user:
          type: string
        tokenFrom:
          type: string
        tokenTo:
          type: string
        txIn:
          type: string
        txOut:
          type: string
        amountFrom:
          type: number
        amountTo:
          type: number
        dateAdded:
          type: integer
          format: int64
        timeAgo:
          type: string
    AnalyticsSummaryDto:
      type: object
      properties:
        day:
          $ref: '#/components/schemas/SummaryStatsDto'
        week:
          $ref: '#/components/schemas/SummaryStatsDto'
    SummaryStatsDto:
      type: object
      properties:
        count:
          type: integer
          format: int32
        volume:
          type: string
